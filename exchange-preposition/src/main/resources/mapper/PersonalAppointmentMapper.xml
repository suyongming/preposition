<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.etong.exchange.preposition.dao.general.PersonalAppointmentMapper" >

    <resultMap id="BaseResultMap" type="com.etong.exchange.preposition.entity.custom.PersonalAppointmentDTO" >
        <id column="ID" property="id" jdbcType="VARCHAR" />
        <result column="USER_ID" property="userId" jdbcType="VARCHAR" />
        <result column="APPOINT_DATE" property="appointDate" jdbcType="VARCHAR" />
        <result column="APPOINT_TIME" property="appointTime" jdbcType="VARCHAR" />
        <result column="PACKAGE_CODE" property="packageCode" jdbcType="VARCHAR" />
        <result column="PACKAGE_NAME" property="packageName" jdbcType="VARCHAR" />
        <result column="ITEMS" property="items" jdbcType="LONGVARCHAR" />
        <result column="STATUS" property="status" jdbcType="INTEGER" />
        <result column="OPERATE_TIME" property="operateTime" jdbcType="VARCHAR" />
        <result column="CANCEL_TIME" property="cancelTime" jdbcType="VARCHAR" />
        <result column="INSTITUTION_CODE" property="institutionCode" jdbcType="VARCHAR" />
        <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
        <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="PACKAGE_ID" property="packageId" jdbcType="VARCHAR" />
        <result column="PRICE" property="price" jdbcType="VARCHAR" />
        <result column="EXAM_NO" property="examNo" jdbcType="VARCHAR" />
        <result column="ORDER_NO" property="orderNo" jdbcType="VARCHAR" />
        <result column="PLUS_ITEMS" property="plusItems" jdbcType="LONGVARCHAR" />
        <result column="MINUS_ITEMS" property="minusItems" jdbcType="LONGVARCHAR" />
        <result column="SOURCE" property="source" jdbcType="INTEGER" />
        <result column="postcode" property="postcode" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        ID, USER_ID, APPOINT_DATE, APPOINT_TIME, PACKAGE_CODE, PACKAGE_NAME, ITEMS, STATUS, 
        OPERATE_TIME, CANCEL_TIME, INSTITUTION_CODE, CREATE_TIME, UPDATE_TIME, PACKAGE_ID, 
        PRICE, EXAM_NO, ORDER_NO, PLUS_ITEMS, MINUS_ITEMS, SOURCE, postcode
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.etong.exchange.preposition.entity.example.PersonalAppointmentExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List" />
        from tb_personal_appointment
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select 
        <include refid="Base_Column_List" />
        from tb_personal_appointment
        where ID = #{id,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
        delete from tb_personal_appointment
        where ID = #{id,jdbcType=VARCHAR}
    </delete>

    <delete id="deleteByExample" parameterType="com.etong.exchange.preposition.entity.example.PersonalAppointmentExample" >
        delete from tb_personal_appointment
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="com.etong.exchange.preposition.entity.custom.PersonalAppointmentDTO" >
        insert into tb_personal_appointment (ID, USER_ID, APPOINT_DATE, 
            APPOINT_TIME, PACKAGE_CODE, PACKAGE_NAME, 
            ITEMS, STATUS, OPERATE_TIME, 
            CANCEL_TIME, INSTITUTION_CODE, CREATE_TIME, 
            UPDATE_TIME, PACKAGE_ID, PRICE, 
            EXAM_NO, ORDER_NO, PLUS_ITEMS, 
            MINUS_ITEMS, SOURCE, postcode
            )
        values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{appointDate,jdbcType=VARCHAR}, 
            #{appointTime,jdbcType=VARCHAR}, #{packageCode,jdbcType=VARCHAR}, #{packageName,jdbcType=VARCHAR}, 
            #{items,jdbcType=LONGVARCHAR}, #{status,jdbcType=INTEGER}, now(),
            #{cancelTime,jdbcType=VARCHAR}, #{institutionCode,jdbcType=VARCHAR}, now(),
            now(), #{packageId,jdbcType=VARCHAR}, #{price,jdbcType=VARCHAR},
            #{examNo,jdbcType=VARCHAR}, #{orderNo,jdbcType=VARCHAR}, #{plusItems,jdbcType=LONGVARCHAR}, 
            #{minusItems,jdbcType=LONGVARCHAR}, #{source,jdbcType=INTEGER}, #{postcode,jdbcType=VARCHAR}
            )
    </insert>

    <insert id="insertSelective" parameterType="com.etong.exchange.preposition.entity.custom.PersonalAppointmentDTO" >
        insert into tb_personal_appointment
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                ID,
            </if>
            <if test="userId != null" >
                USER_ID,
            </if>
            <if test="appointDate != null" >
                APPOINT_DATE,
            </if>
            <if test="appointTime != null" >
                APPOINT_TIME,
            </if>
            <if test="packageCode != null" >
                PACKAGE_CODE,
            </if>
            <if test="packageName != null" >
                PACKAGE_NAME,
            </if>
            <if test="items != null" >
                ITEMS,
            </if>
            <if test="status != null" >
                STATUS,
            </if>
            <if test="operateTime != null" >
                OPERATE_TIME,
            </if>
            <if test="cancelTime != null" >
                CANCEL_TIME,
            </if>
            <if test="institutionCode != null" >
                INSTITUTION_CODE,
            </if>
            <if test="createTime != null" >
                CREATE_TIME,
            </if>
            <if test="updateTime != null" >
                UPDATE_TIME,
            </if>
            <if test="packageId != null" >
                PACKAGE_ID,
            </if>
            <if test="price != null" >
                PRICE,
            </if>
            <if test="examNo != null" >
                EXAM_NO,
            </if>
            <if test="orderNo != null" >
                ORDER_NO,
            </if>
            <if test="plusItems != null" >
                PLUS_ITEMS,
            </if>
            <if test="minusItems != null" >
                MINUS_ITEMS,
            </if>
            <if test="source != null" >
                SOURCE,
            </if>
            <if test="postcode != null" >
                postcode,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="userId != null" >
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="appointDate != null" >
                #{appointDate,jdbcType=VARCHAR},
            </if>
            <if test="appointTime != null" >
                #{appointTime,jdbcType=VARCHAR},
            </if>
            <if test="packageCode != null" >
                #{packageCode,jdbcType=VARCHAR},
            </if>
            <if test="packageName != null" >
                #{packageName,jdbcType=VARCHAR},
            </if>
            <if test="items != null" >
                #{items,jdbcType=LONGVARCHAR},
            </if>
            <if test="status != null" >
                #{status,jdbcType=INTEGER},
            </if>
            <if test="operateTime != null" >
                #{operateTime,jdbcType=VARCHAR},
            </if>
            <if test="cancelTime != null" >
                #{cancelTime,jdbcType=VARCHAR},
            </if>
            <if test="institutionCode != null" >
                #{institutionCode,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="packageId != null" >
                #{packageId,jdbcType=VARCHAR},
            </if>
            <if test="price != null" >
                #{price,jdbcType=VARCHAR},
            </if>
            <if test="examNo != null" >
                #{examNo,jdbcType=VARCHAR},
            </if>
            <if test="orderNo != null" >
                #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="plusItems != null" >
                #{plusItems,jdbcType=LONGVARCHAR},
            </if>
            <if test="minusItems != null" >
                #{minusItems,jdbcType=LONGVARCHAR},
            </if>
            <if test="source != null" >
                #{source,jdbcType=INTEGER},
            </if>
            <if test="postcode != null" >
                #{postcode,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.etong.exchange.preposition.entity.example.PersonalAppointmentExample" resultType="java.lang.Integer" >
        select count(*) from tb_personal_appointment
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        update tb_personal_appointment
        <set >
            <if test="record.id != null" >
                ID = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.userId != null" >
                USER_ID = #{record.userId,jdbcType=VARCHAR},
            </if>
            <if test="record.appointDate != null" >
                APPOINT_DATE = #{record.appointDate,jdbcType=VARCHAR},
            </if>
            <if test="record.appointTime != null" >
                APPOINT_TIME = #{record.appointTime,jdbcType=VARCHAR},
            </if>
            <if test="record.packageCode != null" >
                PACKAGE_CODE = #{record.packageCode,jdbcType=VARCHAR},
            </if>
            <if test="record.packageName != null" >
                PACKAGE_NAME = #{record.packageName,jdbcType=VARCHAR},
            </if>
            <if test="record.items != null" >
                ITEMS = #{record.items,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.status != null" >
                STATUS = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.operateTime != null" >
                OPERATE_TIME = #{record.operateTime,jdbcType=VARCHAR},
            </if>
            <if test="record.cancelTime != null" >
                CANCEL_TIME = #{record.cancelTime,jdbcType=VARCHAR},
            </if>
            <if test="record.institutionCode != null" >
                INSTITUTION_CODE = #{record.institutionCode,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null" >
                CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null" >
                UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.packageId != null" >
                PACKAGE_ID = #{record.packageId,jdbcType=VARCHAR},
            </if>
            <if test="record.price != null" >
                PRICE = #{record.price,jdbcType=VARCHAR},
            </if>
            <if test="record.examNo != null" >
                EXAM_NO = #{record.examNo,jdbcType=VARCHAR},
            </if>
            <if test="record.orderNo != null" >
                ORDER_NO = #{record.orderNo,jdbcType=VARCHAR},
            </if>
            <if test="record.plusItems != null" >
                PLUS_ITEMS = #{record.plusItems,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.minusItems != null" >
                MINUS_ITEMS = #{record.minusItems,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.source != null" >
                SOURCE = #{record.source,jdbcType=INTEGER},
            </if>
            <if test="record.postcode != null" >
                postcode = #{record.postcode,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        update tb_personal_appointment
        set ID = #{record.id,jdbcType=VARCHAR},
            USER_ID = #{record.userId,jdbcType=VARCHAR},
            APPOINT_DATE = #{record.appointDate,jdbcType=VARCHAR},
            APPOINT_TIME = #{record.appointTime,jdbcType=VARCHAR},
            PACKAGE_CODE = #{record.packageCode,jdbcType=VARCHAR},
            PACKAGE_NAME = #{record.packageName,jdbcType=VARCHAR},
            ITEMS = #{record.items,jdbcType=LONGVARCHAR},
            STATUS = #{record.status,jdbcType=INTEGER},
            OPERATE_TIME = #{record.operateTime,jdbcType=VARCHAR},
            CANCEL_TIME = #{record.cancelTime,jdbcType=VARCHAR},
            INSTITUTION_CODE = #{record.institutionCode,jdbcType=VARCHAR},
            CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
            UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
            PACKAGE_ID = #{record.packageId,jdbcType=VARCHAR},
            PRICE = #{record.price,jdbcType=VARCHAR},
            EXAM_NO = #{record.examNo,jdbcType=VARCHAR},
            ORDER_NO = #{record.orderNo,jdbcType=VARCHAR},
            PLUS_ITEMS = #{record.plusItems,jdbcType=LONGVARCHAR},
            MINUS_ITEMS = #{record.minusItems,jdbcType=LONGVARCHAR},
            SOURCE = #{record.source,jdbcType=INTEGER},
            postcode = #{record.postcode,jdbcType=VARCHAR}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.etong.exchange.preposition.entity.custom.PersonalAppointmentDTO" >
        update tb_personal_appointment
        <set >
            <if test="userId != null" >
                USER_ID = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="appointDate != null" >
                APPOINT_DATE = #{appointDate,jdbcType=VARCHAR},
            </if>
            <if test="appointTime != null" >
                APPOINT_TIME = #{appointTime,jdbcType=VARCHAR},
            </if>
            <if test="packageCode != null" >
                PACKAGE_CODE = #{packageCode,jdbcType=VARCHAR},
            </if>
            <if test="packageName != null" >
                PACKAGE_NAME = #{packageName,jdbcType=VARCHAR},
            </if>
            <if test="items != null" >
                ITEMS = #{items,jdbcType=LONGVARCHAR},
            </if>
            <if test="status != null" >
                STATUS = #{status,jdbcType=INTEGER},
            </if>
            <if test="operateTime != null" >
                OPERATE_TIME = #{operateTime,jdbcType=VARCHAR},
            </if>
            <if test="cancelTime != null" >
                CANCEL_TIME = #{cancelTime,jdbcType=VARCHAR},
            </if>
            <if test="institutionCode != null" >
                INSTITUTION_CODE = #{institutionCode,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="packageId != null" >
                PACKAGE_ID = #{packageId,jdbcType=VARCHAR},
            </if>
            <if test="price != null" >
                PRICE = #{price,jdbcType=VARCHAR},
            </if>
            <if test="examNo != null" >
                EXAM_NO = #{examNo,jdbcType=VARCHAR},
            </if>
            <if test="orderNo != null" >
                ORDER_NO = #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="plusItems != null" >
                PLUS_ITEMS = #{plusItems,jdbcType=LONGVARCHAR},
            </if>
            <if test="minusItems != null" >
                MINUS_ITEMS = #{minusItems,jdbcType=LONGVARCHAR},
            </if>
            <if test="source != null" >
                SOURCE = #{source,jdbcType=INTEGER},
            </if>
            <if test="postcode != null" >
                postcode = #{postcode,jdbcType=VARCHAR},
            </if>
        </set>
        where ID = #{id,jdbcType=VARCHAR}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.etong.exchange.preposition.entity.custom.PersonalAppointmentDTO" >
        update tb_personal_appointment
        set USER_ID = #{userId,jdbcType=VARCHAR},
            APPOINT_DATE = #{appointDate,jdbcType=VARCHAR},
            APPOINT_TIME = #{appointTime,jdbcType=VARCHAR},
            PACKAGE_CODE = #{packageCode,jdbcType=VARCHAR},
            PACKAGE_NAME = #{packageName,jdbcType=VARCHAR},
            ITEMS = #{items,jdbcType=LONGVARCHAR},
            STATUS = #{status,jdbcType=INTEGER},
            OPERATE_TIME = #{operateTime,jdbcType=VARCHAR},
            CANCEL_TIME = #{cancelTime,jdbcType=VARCHAR},
            INSTITUTION_CODE = #{institutionCode,jdbcType=VARCHAR},
            CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
            UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
            PACKAGE_ID = #{packageId,jdbcType=VARCHAR},
            PRICE = #{price,jdbcType=VARCHAR},
            EXAM_NO = #{examNo,jdbcType=VARCHAR},
            ORDER_NO = #{orderNo,jdbcType=VARCHAR},
            PLUS_ITEMS = #{plusItems,jdbcType=LONGVARCHAR},
            MINUS_ITEMS = #{minusItems,jdbcType=LONGVARCHAR},
            SOURCE = #{source,jdbcType=INTEGER},
            postcode = #{postcode,jdbcType=VARCHAR}
        where ID = #{id,jdbcType=VARCHAR}
    </update>
</mapper>